[{"C:\\Users\\fvfer\\OneDrive\\Documents\\CSC 307\\stonkBoisInventory\\frontend\\src\\index.js":"1","C:\\Users\\fvfer\\OneDrive\\Documents\\CSC 307\\stonkBoisInventory\\frontend\\src\\App.js":"2","C:\\Users\\fvfer\\OneDrive\\Documents\\CSC 307\\stonkBoisInventory\\frontend\\src\\MyRouter.js":"3","C:\\Users\\fvfer\\OneDrive\\Documents\\CSC 307\\stonkBoisInventory\\frontend\\src\\NewItemTab.js":"4","C:\\Users\\fvfer\\OneDrive\\Documents\\CSC 307\\stonkBoisInventory\\frontend\\src\\ProductsTab.js":"5","C:\\Users\\fvfer\\OneDrive\\Documents\\CSC 307\\stonkBoisInventory\\frontend\\src\\OrdersTab.js":"6","C:\\Users\\fvfer\\OneDrive\\Documents\\CSC 307\\stonkBoisInventory\\frontend\\src\\NewOrderTab.js":"7","C:\\Users\\fvfer\\OneDrive\\Documents\\CSC 307\\stonkBoisInventory\\frontend\\src\\ProductCard.js":"8"},{"size":224,"mtime":1615272462877,"results":"9","hashOfConfig":"10"},{"size":8913,"mtime":1615356059432,"results":"11","hashOfConfig":"10"},{"size":1722,"mtime":1615353478575,"results":"12","hashOfConfig":"10"},{"size":5443,"mtime":1615356097246,"results":"13","hashOfConfig":"10"},{"size":2299,"mtime":1615350637539,"results":"14","hashOfConfig":"10"},{"size":2143,"mtime":1615355077113,"results":"15","hashOfConfig":"10"},{"size":4276,"mtime":1615355270814,"results":"16","hashOfConfig":"10"},{"size":2215,"mtime":1615272462873,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"7ftsj",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"C:\\Users\\fvfer\\OneDrive\\Documents\\CSC 307\\stonkBoisInventory\\frontend\\src\\index.js",[],["39","40"],"C:\\Users\\fvfer\\OneDrive\\Documents\\CSC 307\\stonkBoisInventory\\frontend\\src\\App.js",["41","42"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './index.scss';\r\nimport MyRouter from './MyRouter';\r\n\r\nconst Sidebar = (props) => {\r\n   return(\r\n     <div className='Sidebar'>\r\n       <ul>\r\n         <li className={props.activeTab === 1 ? 'active':''} onClick={() => props.changeTab(1)}>Products</li>\r\n         <li className={props.activeTab === 3 ? 'active':''} onClick={() => props.changeTab(3)}>Orders</li>\r\n       </ul>\r\n     </div>\r\n   );\r\n}\r\n\r\nclass App extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         activeTab: 1,\r\n         filter: 'none',\r\n         products: [],\r\n         pSort: 'Product Name',\r\n         orders: [],\r\n         oSort: 'Order ID',\r\n         newItemForm: {\r\n            name: '',\r\n            price: '',\r\n            quantity: '',\r\n            category: '',\r\n            brand: '',\r\n            imageURL: ''\r\n         },\r\n         newOrderForm: {\r\n            products: '',\r\n            quantity: '',\r\n            price: '',\r\n            status: '',\r\n            productIDs: ''\r\n         },\r\n      };  \r\n   }\r\n\r\n   changeActiveTab(index) {\r\n      this.setState({activeTab: index});\r\n   }\r\n\r\n   changeNewItemForm(formData){\r\n      this.setState({newItemForm: formData});\r\n   }\r\n\r\n   changeNewOrderForm(formData){\r\n      this.setState({newOrderForm: formData});\r\n   }\r\n\r\n   addNewProduct(product) {\r\n      this.makeProductPostCall(product).then( callResult => {\r\n         if (callResult !== false) {\r\n            this.setState({ newItemForm: {'name' : '', 'price' : '', 'quantity' : '',\r\n             'category' : '', 'brand' : '', 'imageURL' : ''}});\r\n            console.log(callResult);\r\n            this.setState({ products: [...this.state.products, callResult.data] });\r\n            this.setSortedProducts(\"Product Name\");\r\n            console.log(this.state.products);\r\n         }\r\n      });\r\n      this.changeActiveTab(1);\r\n   }\r\n\r\n   makeProductPostCall(product){\r\n      return axios.post('http://localhost:5000/products', product)\r\n         .then(function (response) {\r\n            console.log(response);\r\n            if (response.status === 201) {\r\n               return response;\r\n            }\r\n         })\r\n         .catch(function (error) {\r\n            console.log(error);\r\n            return false;\r\n         });\r\n   }\r\n\r\n   addNewOrder(order) {\r\n      this.makeOrderPostCall(order).then( callResult => {\r\n         if (callResult !== false) {\r\n            this.setState({ newOrderForm: {'products': '', 'quantity': '', \r\n               'price': '', 'status': '', 'productIDs': '', 'imageURL': ''}});\r\n            console.log(callResult);\r\n            this.setState({ orders: [...this.state.orders, callResult.data] });\r\n            this.setSortedOrders(\"Order ID\");\r\n            console.log(this.state.orders);\r\n         }\r\n      });\r\n      this.changeActiveTab(3);\r\n      this.setSortedProducts('Product Name');\r\n   }\r\n\r\n   makeOrderPostCall(order) {\r\n      return axios.post('http://localhost:5000/orders', order)\r\n         .then(function (response) {\r\n            console.log(response);\r\n            if (response.status === 201) {\r\n               return response;\r\n            }\r\n         })\r\n         .catch(function (error) {\r\n            console.log(error);\r\n            return false;\r\n         });\r\n   }\r\n\r\n   removeProduct = id => {\r\n      const { products } = this.state\r\n    \r\n      return axios.delete(`http://localhost:5000/products/${id}`)\r\n        .then(response => {\r\n          if (response.status === 204){\r\n            this.setState({\r\n              products: products.filter((product, i) => {\r\n                return product._id !== id\r\n              }),\r\n            })\r\n          }\r\n      })\r\n    }\r\n\r\n   removeOrder = id => {\r\n      const { orders } = this.state\r\n    \r\n      return axios.delete(`http://localhost:5000/orders/${id}`)\r\n        .then(response => {\r\n          if (response.status === 204){\r\n            this.setState({\r\n              orders: orders.filter((order, i) => {\r\n                return order._id !== id\r\n              }),\r\n            })\r\n          }\r\n      })\r\n    }\r\n\r\n   setSortedProducts(sortBy){\r\n      this.setState({products: this.getSortedProducts(sortBy)});\r\n      this.setState({pSort : sortBy})\r\n   }\r\n\r\n   getSortedProducts(sortBy){\r\n      let dataToSort=this.state.products;\r\n      dataToSort.sort((a, b) => {\r\n         if (sortBy === 'Product Name') {\r\n            a = a.name.toLowerCase();\r\n            b = b.name.toLowerCase();\r\n            if (a < b)\r\n               return -1;\r\n            else if (a > b)\r\n               return 1;\r\n            else\r\n               return 0;\r\n         }\r\n         if (sortBy === 'Price')\r\n            return a.price-b.price;\r\n         if (sortBy === 'Quantity')\r\n            return a.quantity-b.quantity;\r\n         if (sortBy === 'Category') {\r\n            a = a.category.toLowerCase();\r\n            b = b.category.toLowerCase();\r\n            if (a < b)\r\n               return -1;\r\n            else if (a > b)\r\n               return 1;\r\n            else\r\n               return 0;\r\n         }\r\n         if (sortBy === 'Brand') {\r\n            a = a.brand.toLowerCase();\r\n            b = b.brand.toLowerCase();\r\n            if (a < b)\r\n               return -1;\r\n            else if (a > b)\r\n               return 1;\r\n            else\r\n               return 0;\r\n         }\r\n         if (sortBy === 'Product ID') {\r\n            if (a._id < b._id)\r\n               return -1;\r\n            else if (a._id > b._id)\r\n               return 1;\r\n            else\r\n               return 0;\r\n         }\r\n      });\r\n      return dataToSort;\r\n   }\r\n\r\n   setSortedOrders(sortBy){\r\n      this.setState({orders: this.getSortedOrders(sortBy)});\r\n      this.setState({oSort : sortBy})\r\n   }\r\n\r\n   getSortedOrders(sortBy){\r\n      let dataToSort=this.state.orders;\r\n      dataToSort.sort((a, b) => {\r\n         if (sortBy === 'Order ID') {\r\n            if (a._id < b._id)\r\n               return -1;\r\n            else if (a._id > b._id)\r\n               return 1;\r\n            else\r\n               return 0;\r\n         }\r\n         if (sortBy === 'Product Name') {\r\n            a = a.products.toLowerCase();\r\n            b = b.products.toLowerCase();\r\n            if (a < b)\r\n               return -1;\r\n            else if (a > b)\r\n               return 1;\r\n            else\r\n               return 0;\r\n         }\r\n         if (sortBy === 'Quantity')\r\n            return a.quantity-b.quantity;\r\n         if (sortBy === 'Price')\r\n            return a.price-b.price;\r\n         if (sortBy === 'Status') {\r\n            a = a.status.toLowerCase();\r\n            b = b.status.toLowerCase();\r\n            if (a < b)\r\n               return -1;\r\n            else if (a > b)\r\n               return 1;\r\n            else\r\n               return 0;\r\n         }\r\n         if (sortBy === 'Product ID') {\r\n            return a.productIDs - b.productIDs;\r\n         }\r\n      });\r\n      return dataToSort;\r\n   }\r\n\r\n   componentDidMount() {\r\n      axios.get('http://localhost:5000/products')\r\n       .then(res => {\r\n         const products = res.data.products_list;\r\n         this.setState({ products });\r\n         this.setSortedProducts('Product Name');\r\n       })\r\n       .catch(function (error) {\r\n         console.log(error);\r\n       });\r\n      axios.get('http://localhost:5000/orders')\r\n       .then(res => {\r\n         const orders = res.data.orders_list;\r\n         this.setState({ orders });\r\n       })\r\n       .catch(function (error) {\r\n         console.log(error);\r\n       });\r\n   }\r\n\r\n   render () {\r\n\r\n      return (\r\n         <div className='App'>\r\n            <h1 className='title'>Inventory</h1>\r\n            <div className='app-body'>\r\n               <Sidebar activeTab={this.state.activeTab} changeTab={this.changeActiveTab.bind(this)}/>\r\n               <MyRouter \r\n                  activeTab={this.state.activeTab}\r\n                  changeActiveTab={this.changeActiveTab.bind(this)}\r\n\r\n                  products={this.state.products}\r\n                  pSort={this.state.pSort}\r\n                  newItemFormData={this.state.newItemForm}\r\n                  changeNewItemForm={this.changeNewItemForm.bind(this)}\r\n                  addNewProduct={this.addNewProduct.bind(this)}\r\n                  removeProduct={this.removeProduct.bind(this)}\r\n                  setSortedProducts={this.setSortedProducts.bind(this)}\r\n\r\n                  orders={this.state.orders}\r\n                  oSort={this.state.oSort}\r\n                  newOrderFormData={this.state.newOrderForm}\r\n                  changeNewOrderForm={this.changeNewOrderForm.bind(this)}\r\n                  addNewOrder={this.addNewOrder.bind(this)}\r\n                  removeOrder={this.removeOrder.bind(this)}\r\n                  setSortedOrders={this.setSortedOrders.bind(this)}\r\n               />\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default App;","C:\\Users\\fvfer\\OneDrive\\Documents\\CSC 307\\stonkBoisInventory\\frontend\\src\\MyRouter.js",[],"C:\\Users\\fvfer\\OneDrive\\Documents\\CSC 307\\stonkBoisInventory\\frontend\\src\\NewItemTab.js",[],"C:\\Users\\fvfer\\OneDrive\\Documents\\CSC 307\\stonkBoisInventory\\frontend\\src\\ProductsTab.js",["43","44"],"import React from 'react';\r\nimport './index.scss';\r\nimport './standard.css'\r\n\r\nconst ProductTableRow = (props) => {\r\n    console.log();\r\n    return (\r\n      <tr>\r\n        <td>{props.product.name}</td>\r\n        <td>${props.product.price}</td>\r\n        <td>{props.product.quantity}</td>\r\n        <td>{props.product.category}</td>\r\n        <td>{props.product.brand}</td>\r\n        <td>{props.product._id}</td>\r\n        <td><a target=\"_blank\" href={props.product.imageURL}>View</a></td>\r\n        <td className='editButton'>Edit</td>\r\n        <td><button onClick={() => props.removeProduct(props.product._id)}>Delete</button></td>\r\n      </tr>\r\n    );\r\n  }\r\n  \r\n  class ProductsTab extends React.Component {\r\n    constructor() {\r\n      super();\r\n    }\r\n    \r\n    renderTableRows(products){\r\n      if (products.length === 0){\r\n        return <div><p>There are currently no items in the inventory</p></div>\r\n      } else {\r\n        let rows = [\r\n         <tr>\r\n          <th onClick={() => this.props.setSortedProducts('Product Name')}>Product Name</th>\r\n          <th onClick={() => this.props.setSortedProducts('Price')}>Price</th>\r\n          <th onClick={() => this.props.setSortedProducts('Quantity')}>Quantity</th>\r\n          <th onClick={() => this.props.setSortedProducts('Category')}>Category</th>\r\n          <th onClick={() => this.props.setSortedProducts('Brand')}>Brand</th>\r\n          <th onClick={() => this.props.setSortedProducts('Product ID')}>Product ID</th>\r\n          <th>Image</th>\r\n        </tr>\r\n        ];\r\n        \r\n        for(let i = 0; i<products.length; i++){\r\n          rows.push(<ProductTableRow product={products[i]} removeProduct={this.props.removeProduct}/>);\r\n        }\r\n        \r\n        return rows;\r\n      }\r\n    }\r\n\r\n    render(){\r\n      return(\r\n        <div className='ProductsTab'>\r\n          <h1>Available Products List</h1>\r\n          <button onClick={() => this.props.changeActiveTab(0)} style={{float: 'right'}}>Add New Product</button>\r\n          <p>Showing all available products:</p>\r\n          <p>Sorted by: <b>{this.props.pSort}</b> (Click on row header to sort)</p>\r\n          <table className='productTable'>\r\n            {this.renderTableRows(this.props.products)}\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n \r\nexport default ProductsTab;","C:\\Users\\fvfer\\OneDrive\\Documents\\CSC 307\\stonkBoisInventory\\frontend\\src\\OrdersTab.js",["45"],"import React from 'react';\r\nimport './index.scss';\r\nimport './standard.css'\r\n\r\nconst OrderTableRow = (props) => {\r\n    console.log();\r\n    return (\r\n      <tr>\r\n        <td>{props.order._id}</td>\r\n        <td>{props.order.products}</td>\r\n        <td>{props.order.quantity}</td>\r\n        <td>{props.order.price}</td>\r\n        <td>{props.order.status}</td>\r\n        <td>{props.order.productIDs}</td>\r\n        <td className='editButton'>Edit</td>\r\n        <td><button onClick={() => props.removeOrder(props.order._id)}>Delete</button></td>\r\n      </tr>\r\n    );\r\n  }\r\n  \r\n  class OrdersTab extends React.Component {\r\n    constructor() {\r\n      super();\r\n    }\r\n    \r\n    renderTableRows(orders){\r\n      if (orders.length === 0){\r\n        return <div><p>There are currently no orders in the history</p></div>\r\n      } else {\r\n        let rows = [\r\n         <tr>\r\n          <th onClick={() => this.props.setSortedOrders('Order ID')}>Order ID</th>\r\n          <th onClick={() => this.props.setSortedOrders('Product Name')}>Product Name</th>\r\n          <th onClick={() => this.props.setSortedOrders('Quantity')}>Quantity Ordered</th>\r\n          <th onClick={() => this.props.setSortedOrders('Price')}>Total Price</th>\r\n          <th onClick={() => this.props.setSortedOrders('Status')}>Status</th>\r\n          <th onClick={() => this.props.setSortedOrders('Product ID')}>Product IDs</th>\r\n        </tr>\r\n        ];\r\n        \r\n        for(let i = 0; i<orders.length; i++){\r\n          rows.push(<OrderTableRow order={orders[i]} removeOrder={this.props.removeOrder}/>);\r\n        }\r\n        \r\n        return rows;\r\n      }\r\n    }\r\n    \r\n    render(){\r\n      return(\r\n        <div className='OrdersTab'>\r\n          <h1>Order History</h1>\r\n          <button onClick={() => this.props.changeActiveTab(2)} style={{float: 'right'}}>Add New Order</button>\r\n          <p>Showing all orders:</p>\r\n          <p>Sorted by: <b>{this.props.oSort}</b> (Click on row header to sort)</p>\r\n          <table className='orderTable'>\r\n            {this.renderTableRows(this.props.orders)}\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n \r\nexport default OrdersTab;","C:\\Users\\fvfer\\OneDrive\\Documents\\CSC 307\\stonkBoisInventory\\frontend\\src\\NewOrderTab.js",[],"C:\\Users\\fvfer\\OneDrive\\Documents\\CSC 307\\stonkBoisInventory\\frontend\\src\\ProductCard.js",["46"],"import React from 'react';\r\nimport './index.scss';\r\n\r\nclass ProductCard extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        name: props.product.name,\r\n        price: props.product.price,\r\n        quantity: props.product.quantity,\r\n        category: props.product.category,\r\n        brand: props.product.brand,\r\n        imageURL: 'http://via.placeholder.com/200x200',\r\n        checkURL: props.product.imageURL,\r\n      }\r\n      this.checkImage.bind(this);\r\n      this.checkImage();\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps){\r\n      if(nextProps.product.name !== this.state.name){\r\n        this.setState({name: nextProps.product.name});\r\n      }\r\n      if(nextProps.product.price !== this.state.price){\r\n        this.setState({price: nextProps.product.price});\r\n      }\r\n      if(nextProps.product.quantity !== this.state.quantity){\r\n        this.setState({quantity: nextProps.product.quantity});\r\n      }\r\n      if(nextProps.product.category !== this.state.category){\r\n        this.setState({category: nextProps.product.category});\r\n      }\r\n      if(nextProps.product.brand !== this.state.brand){\r\n        this.setState({brand: nextProps.product.brand});\r\n      }\r\n      if(nextProps.product.imageURL !== this.state.imageURL){\r\n        this.setState({checkURL: nextProps.product.imageURL}, () => this.checkImage());\r\n      }\r\n    }\r\n  \r\n    checkImage(){\r\n      let image = new Image();\r\n      image.onerror = () =>{\r\n        this.setState({imageURL: 'http://via.placeholder.com/200x200'});\r\n      }\r\n      image.onload = () =>{\r\n        this.setState({imageURL: this.state.checkURL});\r\n      }\r\n      image.src = this.state.checkURL;\r\n    }\r\n    \r\n    render(){\r\n      return(\r\n        <div className = 'ProductCard'>\r\n          <p className='category'>Products &#187; {this.state.category} &#187; {this.state.brand}</p>\r\n          <p className='name'>{this.state.name}</p>\r\n          <img src={this.state.imageURL}></img>\r\n          <p className='quantity'>Quantity: <span>{this.state.quantity}</span></p>\r\n          <p className='price'>from <span>${this.state.price}</span></p>\r\n        </div>\r\n      );\r\n    }\r\n  } \r\n\r\nexport default ProductCard;\r\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":151,"column":30,"nodeType":"53","messageId":"54","endLine":151,"endColumn":32},{"ruleId":"51","severity":1,"message":"52","line":205,"column":30,"nodeType":"53","messageId":"54","endLine":205,"endColumn":32},{"ruleId":"55","severity":1,"message":"56","line":15,"column":13,"nodeType":"57","endLine":15,"endColumn":62},{"ruleId":"58","severity":1,"message":"59","line":23,"column":5,"nodeType":"60","messageId":"61","endLine":25,"endColumn":6},{"ruleId":"58","severity":1,"message":"59","line":22,"column":5,"nodeType":"60","messageId":"61","endLine":24,"endColumn":6},{"ruleId":"62","severity":1,"message":"63","line":57,"column":11,"nodeType":"57","endLine":57,"endColumn":42},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]