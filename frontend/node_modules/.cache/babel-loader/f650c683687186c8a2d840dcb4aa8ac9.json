{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fvfer\\\\OneDrive\\\\Documents\\\\CSC 307\\\\stonkBoisInventory\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Table from './Table';\nimport Form from './Form';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction validate(name, email, password) {\n  // we are going to store errors for all fields\n  // in a signle array\n  const errors = [];\n\n  if (name.length === 0) {\n    errors.push(\"Name can't be empty\");\n  }\n\n  return errors;\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      characters: [],\n      errors: []\n    };\n\n    this.handleSubmit = character => {\n      const errors = validate(character[\"name\"]);\n\n      if (errors.length > 0) {\n        this.setState({\n          errors\n        });\n        return;\n      }\n\n      this.makePostCall(character).then(callResult => {\n        console.log(callResult);\n        console.log(character);\n\n        if (callResult.status === 201) {\n          this.setState({\n            characters: [...this.state.characters, callResult.data]\n          });\n        }\n      });\n    };\n\n    this.removeCharacter = index => {\n      const {\n        characters\n      } = this.state;\n      const character = characters.find((c, i) => {\n        return i === index;\n      });\n      console.log(character);\n      this.makeDeleteCall(character.id).then(callResult => {\n        if (callResult === true) {\n          this.setState({\n            characters: characters.filter((c, i) => {\n              return i !== index;\n            })\n          });\n        }\n      });\n    };\n  }\n\n  makePostCall(character) {\n    return axios.post('http://localhost:5000/products', character).then(function (response) {\n      console.log(response);\n      return response;\n    }).catch(function (error) {\n      console.log(error);\n      return false;\n    });\n  }\n\n  makeDeleteCall(id) {\n    console.log('http://localhost:5000/products/' + id);\n    return axios.delete('http://localhost:5000/products/' + id).then(function (response) {\n      console.log(response);\n      return response.status === 200;\n    }).catch(function (error) {\n      console.log(error);\n      return false;\n    });\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/products').then(res => {\n      const characters = res.data.products_list;\n      this.setState({\n        characters\n      });\n    }).catch(function (error) {\n      //Not handling the error. Just logging into the console.\n      console.log(error);\n    });\n  }\n\n  render() {\n    const {\n      characters\n    } = this.state;\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        characterData: characters,\n        removeCharacter: this.removeCharacter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        handleSubmit: this.handleSubmit,\n        children: [\" \", errors.map(error => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Error: \", error]\n        }, error, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 75\n        }, this)), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/fvfer/OneDrive/Documents/CSC 307/stonkBoisInventory/frontend/src/App.js"],"names":["React","Component","Table","Form","axios","validate","name","email","password","errors","length","push","App","state","characters","handleSubmit","character","setState","makePostCall","then","callResult","console","log","status","data","removeCharacter","index","find","c","i","makeDeleteCall","id","filter","post","response","catch","error","delete","componentDidMount","get","res","products_list","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Table from './Table';\r\nimport Form from './Form';\r\nimport axios from 'axios'\r\n\r\nfunction validate(name, email, password) {\r\n   // we are going to store errors for all fields\r\n   // in a signle array\r\n   const errors = [];\r\n \r\n   if (name.length === 0) {\r\n     errors.push(\"Name can't be empty\");\r\n   }\r\n\r\n   return errors;\r\n}\r\n\r\nclass App extends Component {\r\n   state = {\r\n      characters: [],\r\n      errors: []\r\n   };\r\n\r\n   makePostCall(character){\r\n      return axios.post('http://localhost:5000/products', character)\r\n       .then(function (response) {\r\n         console.log(response);\r\n         return response;\r\n       })\r\n       .catch(function (error) {\r\n         console.log(error);\r\n         return false;\r\n       });\r\n   }\r\n\r\n   makeDeleteCall(id){\r\n      console.log('http://localhost:5000/products/' + id)\r\n      return axios.delete('http://localhost:5000/products/' + id)\r\n       .then(function (response) {\r\n         console.log(response);\r\n         return (response.status === 200);\r\n       })\r\n       .catch(function (error) {\r\n         console.log(error);\r\n         return false;\r\n       });\r\n   }\r\n\r\n   handleSubmit = character => {\r\n      const errors = validate(character[\"name\"]);\r\n      if (errors.length > 0) {\r\n         this.setState({ errors });\r\n         return;\r\n      }\r\n\r\n      this.makePostCall(character).then( callResult => {\r\n         console.log(callResult)\r\n         console.log(character)\r\n         if (callResult.status === 201) {\r\n            this.setState({ characters: [...this.state.characters, callResult.data] });\r\n         }\r\n      });\r\n   }\r\n\r\n   removeCharacter = index => {\r\n      const { characters } = this.state\r\n\r\n      const character = characters.find((c, i) => {\r\n         return i === index\r\n      })\r\n\r\n      console.log(character)\r\n\r\n      this.makeDeleteCall(character.id).then( callResult => {\r\n         if (callResult === true) {\r\n            this.setState({\r\n               characters: characters.filter((c, i) => {\r\n                  return i !== index\r\n               }),\r\n            })\r\n         }\r\n      });\r\n   }\r\n\r\n   componentDidMount() {\r\n      axios.get('http://localhost:5000/products')\r\n       .then(res => {\r\n         const characters = res.data.products_list;\r\n         this.setState({ characters });\r\n       })\r\n       .catch(function (error) {\r\n         //Not handling the error. Just logging into the console.\r\n         console.log(error);\r\n       });\r\n   }\r\n\r\n   render () {\r\n      const { characters } = this.state;\r\n      const { errors } = this.state;\r\n\r\n      return (\r\n         <div className=\"container\">\r\n            <Table characterData={characters} removeCharacter={this.removeCharacter} />\r\n            <Form handleSubmit={this.handleSubmit}> {errors.map(error => (<p key={error}>Error: {error}</p>))} </Form>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}