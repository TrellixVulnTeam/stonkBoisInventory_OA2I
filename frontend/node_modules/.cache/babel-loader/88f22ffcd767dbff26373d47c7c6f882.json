{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fvfer\\\\OneDrive\\\\Documents\\\\CSC 307\\\\stonkBoisInventory\\\\frontend\\\\src\\\\NewOrderTab.js\";\nimport React from 'react';\nimport './index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewOrderTab extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      formErrors: {\n        products: false,\n        quantity: false,\n        price: false,\n        status: false,\n        productIDs: false,\n        imageURL: false\n      }\n    };\n  }\n\n  checkForm() {\n    let products = document.getElementById('newOrderForm-products').value;\n    let quantity = document.getElementById('newOrderForm-quantity').value;\n    let price = document.getElementById('newOrderForm-price').value;\n    let status = document.getElementById('newOrderForm-status').value;\n    let productIDs = document.getElementById('newOrderForm-productIDs').value;\n    let imageURL = document.getElementById('newOrderForm-imageURL').value;\n    let errors = this.state.formErrors;\n    products.length === 0 ? errors.products = true : errors.products = false;\n    quantity.length === 0 ? errors.quantity = true : errors.quantity = false;\n    price.length === 0 ? errors.price = true : errors.price = false;\n    status.length === 0 ? errors.status = true : errors.status = false;\n    productIDs.length === 0 ? errors.productIDs = true : errors.productIDs = false;\n    let image = new Image();\n\n    image.onerror = () => {\n      // this.finalizeForm(false, product);\n      this.finalizeForm(false, this.props.formData);\n    };\n\n    image.onload = () => {\n      // this.finalizeForm(true, product);\n      this.finalizeForm(true, this.props.formData);\n    };\n\n    this.setState({\n      formErrors: errors\n    });\n    image.src = imageURL;\n  }\n\n  finalizeForm(isImageURLValid, order) {\n    if (isImageURLValid === false) {\n      let errors = this.state.formErrors;\n      errors.imageURL = true;\n      this.setState({\n        formErrors: errors\n      });\n    } else {\n      // TODO: implement some sort of post call inside addNewProduct, \n      //       or combine addNewProduct with makePostCall\n      this.props.addNewOrder(order);\n    }\n  }\n\n  updateForm() {\n    let products = document.getElementById('newOrderForm-products').value;\n    let quantity = document.getElementById('newOrderForm-quantity').value;\n    let price = document.getElementById('newOrderForm-price').value;\n    let status = document.getElementById('newOrderForm-status').value;\n    let productIDs = document.getElementById('newOrderForm-productIDs').value;\n    let imageURL = document.getElementById('newOrderForm-imageURL').value;\n    let errors = this.state.formErrors;\n\n    if (this.props.formData.products !== products) {\n      errors.products = false;\n    }\n\n    if (this.props.formData.quantity !== quantity) {\n      errors.quantity = false;\n    }\n\n    if (this.props.formData.price !== price) {\n      errors.price = false;\n    }\n\n    if (this.props.formData.status !== status) {\n      errors.status = false;\n    }\n\n    if (this.props.formData.productIDs !== productIDs) {\n      errors.productIDs = false;\n    }\n\n    if (this.props.formData.imageURL !== imageURL) {\n      errors.imageURL = false;\n    }\n\n    this.setState({\n      formErrors: errors\n    });\n    this.props.changeNewOrderForm({\n      products: products,\n      name: products,\n      quantity: quantity,\n      price: price,\n      status: status,\n      productIDs: productIDs,\n      imageURL: imageURL\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NewItemTab\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newItem-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add a New Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Products Ordered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: this.state.formErrors.products === true ? 'formCheck-err' : '',\n            type: \"text\",\n            required: true,\n            id: \"newOrderForm-products\",\n            value: this.props.formData.products,\n            onChange: () => this.updateForm()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Quantity Ordered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: this.state.formErrors.price === true ? 'formCheck-err' : '',\n            type: \"number\",\n            required: true,\n            id: \"newOrderForm-quantity\",\n            value: this.props.formData.quantity,\n            onChange: () => this.updateForm()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Total Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: this.state.formErrors.price === true ? 'formCheck-err' : '',\n            type: \"number\",\n            required: true,\n            id: \"newOrderForm-price\",\n            value: this.props.formData.price,\n            onChange: () => this.updateForm()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: this.state.formErrors.status === true ? 'formCheck-err' : '',\n            type: \"text\",\n            required: true,\n            id: \"newOrderForm-status\",\n            value: this.props.formData.status,\n            onChange: () => this.updateForm()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Product IDs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: this.state.formErrors.productIDs === true ? 'formCheck-err' : '',\n            type: \"text\",\n            required: true,\n            id: \"newOrderForm-productIDs\",\n            value: this.props.formData.productIDs,\n            onChange: () => this.updateForm()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Image URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: this.state.formErrors.imageURL === true ? 'formCheck-err' : '',\n            type: \"text\",\n            required: true,\n            id: \"newOrderForm-imageURL\",\n            value: this.props.formData.imageURL,\n            onChange: () => this.updateForm(),\n            placeholder: \"Paste link here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.checkForm(),\n          children: \"Add Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default NewOrderTab;","map":{"version":3,"sources":["C:/Users/fvfer/OneDrive/Documents/CSC 307/stonkBoisInventory/frontend/src/NewOrderTab.js"],"names":["React","NewOrderTab","Component","constructor","state","formErrors","products","quantity","price","status","productIDs","imageURL","checkForm","document","getElementById","value","errors","length","image","Image","onerror","finalizeForm","props","formData","onload","setState","src","isImageURLValid","order","addNewOrder","updateForm","changeNewOrderForm","name","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './index.scss';\r\n\r\nclass NewOrderTab extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        formErrors: {\r\n          products: false,\r\n          quantity: false,\r\n          price: false,\r\n          status: false,\r\n          productIDs: false,\r\n          imageURL: false\r\n        }\r\n      }\r\n    }\r\n    \r\n    checkForm(){\r\n      let products = document.getElementById('newOrderForm-products').value;\r\n      let quantity = document.getElementById('newOrderForm-quantity').value;\r\n      let price = document.getElementById('newOrderForm-price').value;\r\n      let status = document.getElementById('newOrderForm-status').value;\r\n      let productIDs = document.getElementById('newOrderForm-productIDs').value;\r\n      let imageURL = document.getElementById('newOrderForm-imageURL').value;\r\n      let errors = this.state.formErrors;\r\n      products.length === 0 ? errors.products = true : errors.products = false;\r\n      quantity.length === 0 ? errors.quantity = true : errors.quantity = false;\r\n      price.length === 0 ? errors.price = true : errors.price = false;\r\n      status.length === 0 ? errors.status = true : errors.status = false;\r\n      productIDs.length === 0 ? errors.productIDs = true : errors.productIDs = false;\r\n      \r\n      let image = new Image();\r\n      image.onerror = () =>{\r\n        // this.finalizeForm(false, product);\r\n        this.finalizeForm(false, this.props.formData);\r\n      }\r\n      image.onload = () =>{\r\n        // this.finalizeForm(true, product);\r\n        this.finalizeForm(true, this.props.formData);\r\n      }\r\n      this.setState({formErrors: errors});\r\n      image.src = imageURL;\r\n    }\r\n    \r\n    finalizeForm(isImageURLValid, order){\r\n      \r\n      if(isImageURLValid === false){\r\n        let errors = this.state.formErrors;\r\n        errors.imageURL = true;\r\n        this.setState({formErrors: errors});\r\n      } else {\r\n        // TODO: implement some sort of post call inside addNewProduct, \r\n        //       or combine addNewProduct with makePostCall\r\n        this.props.addNewOrder(order);\r\n      }\r\n    }\r\n    \r\n    updateForm(){\r\n      let products = document.getElementById('newOrderForm-products').value;\r\n      let quantity = document.getElementById('newOrderForm-quantity').value;\r\n      let price = document.getElementById('newOrderForm-price').value;\r\n      let status = document.getElementById('newOrderForm-status').value;\r\n      let productIDs = document.getElementById('newOrderForm-productIDs').value;\r\n      let imageURL = document.getElementById('newOrderForm-imageURL').value;\r\n      let errors = this.state.formErrors;\r\n      if(this.props.formData.products !== products){\r\n        errors.products = false;\r\n      }\r\n      if(this.props.formData.quantity !== quantity){\r\n        errors.quantity = false;\r\n      }\r\n      if(this.props.formData.price !== price){\r\n        errors.price = false;\r\n      }\r\n      if(this.props.formData.status !== status){\r\n        errors.status = false;\r\n      }\r\n      if(this.props.formData.productIDs !== productIDs){\r\n        errors.productIDs = false;\r\n      }\r\n      if(this.props.formData.imageURL !== imageURL){\r\n        errors.imageURL= false;\r\n      }\r\n      this.setState({formErrors: errors});\r\n      \r\n      this.props.changeNewOrderForm({products: products, name: products, quantity: quantity, price: price,\r\n        status: status, productIDs: productIDs, imageURL: imageURL});\r\n    }\r\n    \r\n    render(){\r\n      return(\r\n        <div className='NewItemTab'>\r\n          <div className='newItem-input'>\r\n            <h1>Add a New Order</h1>\r\n            <p>\r\n              <label>Products Ordered</label>\r\n              <input className={this.state.formErrors.products === true ? 'formCheck-err' : ''} type='text' required id='newOrderForm-products' value={this.props.formData.products} onChange={() => this.updateForm()}></input>\r\n            </p>\r\n            <p>\r\n              <label>Quantity Ordered</label>\r\n              <input className={this.state.formErrors.price === true ? 'formCheck-err' : ''} type='number' required id='newOrderForm-quantity' value={this.props.formData.quantity} onChange={() => this.updateForm()}></input>\r\n            </p>\r\n            <p>\r\n              <label>Total Price</label>\r\n              <input className={this.state.formErrors.price === true ? 'formCheck-err' : ''} type='number' required id='newOrderForm-price' value={this.props.formData.price} onChange={() => this.updateForm()}></input>\r\n            </p>\r\n            <p>\r\n              <label>Status</label>\r\n              <input className={this.state.formErrors.status === true ? 'formCheck-err' : ''} type='text' required id='newOrderForm-status' value={this.props.formData.status} onChange={() => this.updateForm()}></input>\r\n            </p>\r\n            <p>\r\n              <label>Product IDs</label>\r\n              <input className={this.state.formErrors.productIDs === true ? 'formCheck-err' : ''} type='text' required id='newOrderForm-productIDs' value={this.props.formData.productIDs} onChange={() => this.updateForm()}></input>\r\n            </p>\r\n            <p>\r\n              <label>Image URL</label>\r\n              <input className={this.state.formErrors.imageURL === true ? 'formCheck-err' : ''} type='text' required id='newOrderForm-imageURL' value={this.props.formData.imageURL} onChange={() => this.updateForm()} placeholder='Paste link here'></input>\r\n            </p>\r\n            <button onClick={() => this.checkForm()}>Add Order</button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default NewOrderTab;\r\n"]},"metadata":{},"sourceType":"module"}