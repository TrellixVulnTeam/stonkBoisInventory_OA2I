{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dando\\\\Desktop\\\\CPE\\\\307\\\\stonkBoisInventory\\\\frontend\\\\src\\\\NewOrderTab.js\";\nimport React from 'react';\nimport './index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewOrderTab extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      formErrors: {\n        products: false,\n        quantity: false,\n        price: false,\n        status: false,\n        productIDs: false\n      }\n    };\n  }\n\n  checkForm() {\n    let products = document.getElementById('newOrderForm-products').value;\n    let quantity = document.getElementById('newOrderForm-quantity').value;\n    let price = document.getElementById('newOrderForm-price').value;\n    let status = document.getElementById('newOrderForm-status').value;\n    let productIDs = document.getElementById('newOrderForm-productIDs').value;\n    let errors = this.state.formErrors;\n    products.length === 0 ? errors.products = true : errors.products = false;\n    quantity.length === 0 ? errors.quantity = true : errors.quantity = false;\n    price.length === 0 ? errors.price = true : errors.price = false;\n    status.length === 0 ? errors.status = true : errors.status = false;\n    productIDs.length === 0 ? errors.productIDs = true : errors.productIDs = false;\n    this.props.addNewOrder(this.props.formData);\n    this.setState({\n      formErrors: errors\n    });\n  }\n\n  updateForm() {\n    let products = document.getElementById('newOrderForm-products').value;\n    let quantity = document.getElementById('newOrderForm-quantity').value;\n    let price = document.getElementById('newOrderForm-price').value;\n    let status = document.getElementById('newOrderForm-status').value;\n    let productIDs = document.getElementById('newOrderForm-productIDs').value;\n    let errors = this.state.formErrors;\n\n    if (this.props.formData.products !== products) {\n      errors.products = false;\n    }\n\n    if (this.props.formData.quantity !== quantity) {\n      errors.quantity = false;\n    }\n\n    if (this.props.formData.price !== price) {\n      errors.price = false;\n    }\n\n    if (this.props.formData.status !== status) {\n      errors.status = false;\n    }\n\n    if (this.props.formData.productIDs !== productIDs) {\n      errors.productIDs = false;\n    }\n\n    this.setState({\n      formErrors: errors\n    });\n    this.props.changeNewOrderForm({\n      products: products,\n      name: products,\n      quantity: quantity,\n      price: price,\n      status: status,\n      productIDs: productIDs\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NewItemTab\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newItem-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add a New Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Products Ordered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: this.state.formErrors.products === true ? 'formCheck-err' : '',\n            type: \"text\",\n            required: true,\n            id: \"newOrderForm-products\",\n            value: this.props.formData.products,\n            onChange: () => this.updateForm()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Quantity Ordered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: this.state.formErrors.price === true ? 'formCheck-err' : '',\n            type: \"number\",\n            required: true,\n            id: \"newOrderForm-quantity\",\n            value: this.props.formData.quantity,\n            onChange: () => this.updateForm()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Total Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: this.state.formErrors.price === true ? 'formCheck-err' : '',\n            type: \"number\",\n            required: true,\n            id: \"newOrderForm-price\",\n            value: this.props.formData.price,\n            onChange: () => this.updateForm()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: this.state.formErrors.status === true ? 'formCheck-err' : '',\n            type: \"text\",\n            required: true,\n            id: \"newOrderForm-status\",\n            value: this.props.formData.status,\n            onChange: () => this.updateForm()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Product IDs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: this.state.formErrors.productIDs === true ? 'formCheck-err' : '',\n            type: \"text\",\n            required: true,\n            id: \"newOrderForm-productIDs\",\n            value: this.props.formData.productIDs,\n            onChange: () => this.updateForm()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.checkForm(),\n          children: \"Add Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default NewOrderTab;","map":{"version":3,"sources":["C:/Users/dando/Desktop/CPE/307/stonkBoisInventory/frontend/src/NewOrderTab.js"],"names":["React","NewOrderTab","Component","constructor","state","formErrors","products","quantity","price","status","productIDs","checkForm","document","getElementById","value","errors","length","props","addNewOrder","formData","setState","updateForm","changeNewOrderForm","name","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './index.scss';\n\nclass NewOrderTab extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        formErrors: {\n          products: false,\n          quantity: false,\n          price: false,\n          status: false,\n          productIDs: false,\n        }\n      }\n    }\n    \n    checkForm(){\n      let products = document.getElementById('newOrderForm-products').value;\n      let quantity = document.getElementById('newOrderForm-quantity').value;\n      let price = document.getElementById('newOrderForm-price').value;\n      let status = document.getElementById('newOrderForm-status').value;\n      let productIDs = document.getElementById('newOrderForm-productIDs').value;\n      let errors = this.state.formErrors;\n      products.length === 0 ? errors.products = true : errors.products = false;\n      quantity.length === 0 ? errors.quantity = true : errors.quantity = false;\n      price.length === 0 ? errors.price = true : errors.price = false;\n      status.length === 0 ? errors.status = true : errors.status = false;\n      productIDs.length === 0 ? errors.productIDs = true : errors.productIDs = false;\n      \n      this.props.addNewOrder(this.props.formData);\n      this.setState({formErrors: errors});\n    }\n    \n    updateForm(){\n      let products = document.getElementById('newOrderForm-products').value;\n      let quantity = document.getElementById('newOrderForm-quantity').value;\n      let price = document.getElementById('newOrderForm-price').value;\n      let status = document.getElementById('newOrderForm-status').value;\n      let productIDs = document.getElementById('newOrderForm-productIDs').value;\n      let errors = this.state.formErrors;\n      if(this.props.formData.products !== products){\n        errors.products = false;\n      }\n      if(this.props.formData.quantity !== quantity){\n        errors.quantity = false;\n      }\n      if(this.props.formData.price !== price){\n        errors.price = false;\n      }\n      if(this.props.formData.status !== status){\n        errors.status = false;\n      }\n      if(this.props.formData.productIDs !== productIDs){\n        errors.productIDs = false;\n      }\n      this.setState({formErrors: errors});\n      \n      this.props.changeNewOrderForm({products: products, name: products, quantity: quantity, price: price,\n        status: status, productIDs: productIDs});\n    }\n    \n    render(){\n      return(\n        <div className='NewItemTab'>\n          <div className='newItem-input'>\n            <h1>Add a New Order</h1>\n            <p>\n              <label>Products Ordered</label>\n              <input className={this.state.formErrors.products === true ? 'formCheck-err' : ''} type='text' required id='newOrderForm-products' value={this.props.formData.products} onChange={() => this.updateForm()}></input>\n            </p>\n            <p>\n              <label>Quantity Ordered</label>\n              <input className={this.state.formErrors.price === true ? 'formCheck-err' : ''} type='number' required id='newOrderForm-quantity' value={this.props.formData.quantity} onChange={() => this.updateForm()}></input>\n            </p>\n            <p>\n              <label>Total Price</label>\n              <input className={this.state.formErrors.price === true ? 'formCheck-err' : ''} type='number' required id='newOrderForm-price' value={this.props.formData.price} onChange={() => this.updateForm()}></input>\n            </p>\n            <p>\n              <label>Status</label>\n              <input className={this.state.formErrors.status === true ? 'formCheck-err' : ''} type='text' required id='newOrderForm-status' value={this.props.formData.status} onChange={() => this.updateForm()}></input>\n            </p>\n            <p>\n              <label>Product IDs</label>\n              <input className={this.state.formErrors.productIDs === true ? 'formCheck-err' : ''} type='text' required id='newOrderForm-productIDs' value={this.props.formData.productIDs} onChange={() => this.updateForm()}></input>\n            </p>\n            <button onClick={() => this.checkForm()}>Add Order</button>\n          </div>\n        </div>\n      );\n    }\n  }\n\nexport default NewOrderTab;\n"]},"metadata":{},"sourceType":"module"}